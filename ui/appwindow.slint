import { Button, VerticalBox, HorizontalBox} from "std-widgets.slint";
import { Outputs } from "outputs.slint";
import { SevenSegmentDisplay } from "sevensegment.slint";
import { SpeedDisplay } from "SpeedDisplay.slint";
import { BatteryDisplay1 } from "BatteryDisplay1.slint";
import { TripDisplay } from "TripDisplay.slint";
import { DriveMode } from "DriveMode.slint";
import { ClockDisplay } from "ClockDisplay.slint";
import { IndicatorDisplay } from "IndicatorDisplay.slint";
import { BatteryDisplay2 } from "BatteryDisplay2.slint";
import { PowerDisplay } from "PowerDisplay.slint";




export component AppWindow inherits Window {
    
    //Expander1
    in-out property <bool> derate;
    in-out property <bool> abs;
    in-out property <bool> flasher;
    in-out property <bool> alarmAmber;
    in-out property <bool> akuBattAlarm;
    in-out property <bool> motorAlarmMilLamp;
    in-out property <bool> battery1Indicator;
    in-out property <bool> leftSignal;
    in-out property <bool> battery2_60;
    in-out property <bool> ble;
    in-out property <bool> battery2_70;
    in-out property <bool> battery2_80;
    in-out property <bool> battery2_90;
    in-out property <bool> battery2_100;
    in-out property <bool> rightSignal;
    in-out property <bool> battery2Indicator;

    //Expander2
    in-out property <bool> clockMinuteTensC;
    in-out property <bool> clockMinuteTensD;
    in-out property <bool> clockMinuteTensE;
    in-out property <bool> clockMinuteTensG;
    in-out property <bool> clockMinuteTensF;
    in-out property <bool> clockMinuteTensA;
    in-out property <bool> clockMinuteTensB;
    in-out property <bool> clockMinuteOnesE;
    in-out property <bool> dateIndicator;
    in-out property <bool> clockIndicator;
    in-out property <bool> clockMinuteOnesF;
    in-out property <bool> clockMinuteOnesA;
    in-out property <bool> clockMinuteOnesB;
    in-out property <bool> clockMinuteOnesG;
    in-out property <bool> clockMinuteOnesC;
    in-out property <bool> clockMinuteOnesD;

    //Expander3
    in-out property <bool> speedHundredsA;
    in-out property <bool> speedTensF;
    in-out property <bool> speedTensA;
    in-out property <bool> speedTensG;
    in-out property <bool> speedTensB;
    in-out property <bool> speedOnesF;
    in-out property <bool> speedOnesA;
    in-out property <bool> speedOnesB;
    in-out property <bool> speedHundredsB;
    in-out property <bool> speedTensD;
    in-out property <bool> speedOnesD;
    in-out property <bool> speedTensE;
    in-out property <bool> speedTensC;
    in-out property <bool> speedOnesE;
    in-out property <bool> speedOnesC;
    in-out property <bool> speedOnesG;

    //Expander4
    in-out property <bool> readyIndicator;
    in-out property <bool> unused1;
    in-out property <bool> unused2;
    in-out property <bool> driveModeR;
    in-out property <bool> driveModeD1;
    in-out property <bool> driveModeD2;
    in-out property <bool> driveModeD3;
    in-out property <bool> driveModeP;
    in-out property <bool> unused3;
    in-out property <bool> unused4;
    in-out property <bool> unused5;
    in-out property <bool> unused6;
    in-out property <bool> unused7;
    in-out property <bool> alarmRed;
    in-out property <bool> unused9;
    in-out property <bool> unused10;

    //Expander5
    in-out property <bool> clockHourTensC;
    in-out property <bool> clockHourTensD;
    in-out property <bool> clockHourTensE;
    in-out property <bool> clockHourTensG;
    in-out property <bool> clockMinusIndicator;
    in-out property <bool> clockHourTensF;
    in-out property <bool> clockHourTensA;
    in-out property <bool> clockHourTensB;
    in-out property <bool> clockColonIndicator;
    in-out property <bool> clockHourOnesA;
    in-out property <bool> clockHourOnesB;
    in-out property <bool> clockHourOnesG;
    in-out property <bool> clockHourOnesC;
    in-out property <bool> clockHourOnesD;
    in-out property <bool> clockHourOnesE;
    in-out property <bool> clockHourOnesF;

    //Expander6
    in-out property <bool> tripOnesDF;
    in-out property <bool> tripOnesD;
    in-out property <bool> tripOnesE;
    in-out property <bool> tripOnesG;
    in-out property <bool> tripOnesF;
    in-out property <bool> tripOnesA;
    in-out property <bool> tripOnesB;
    in-out property <bool> tripOnesC;
    in-out property <bool> tripKmIndicator;
    in-out property <bool> tripFractionA;
    in-out property <bool> tripFractionB;
    in-out property <bool> tripFractionG;
    in-out property <bool> tripFractionC;
    in-out property <bool> tripFractionD;
    in-out property <bool> tripFractionE;
    in-out property <bool> tripFractionF;

    //Expander7
    in-out property <bool> clockTemperatureIndicator;
    in-out property <bool> powerMinus20;
    in-out property <bool> powerMinus30;
    in-out property <bool> battery1_10;
    in-out property <bool> battery1_20;
    in-out property <bool> taillights;
    in-out property <bool> headlights;
    in-out property <bool> farlights;
    in-out property <bool> battery1_30;
    in-out property <bool> battery1_40;
    in-out property <bool> battery1_50;
    in-out property <bool> battery1_60;
    in-out property <bool> battery1_70;
    in-out property <bool> battery1_80;
    in-out property <bool> battery1_90;
    in-out property <bool> battery1_100;

    //Expander8
    in-out property <bool> serviceAlarm;
    in-out property <bool> gsmIndicator;
    in-out property <bool> battery2_50;
    in-out property <bool> battery2_40;
    in-out property <bool> kmh;
    in-out property <bool> battery2_30;
    in-out property <bool> battery2_20;
    in-out property <bool> battery2_10;
    in-out property <bool> range;
    in-out property <bool> powerMinus10;
    in-out property <bool> trip;
    in-out property <bool> powerPlus10;
    in-out property <bool> odo;
    in-out property <bool> powerPlus20;
    in-out property <bool> powerPlus30;
    in-out property <bool> powerPlus40;

    //Expander9
    in-out property <bool> tripTenthousandsE;
    in-out property <bool> tripTenthousandsG;
    in-out property <bool> tripTenthousandsF;
    in-out property <bool> tripTenthousandsA;
    in-out property <bool> tripHundredthousandsBAlt;
    in-out property <bool> tripHundredthousandsAUst;
    in-out property <bool> powerPlus60;
    in-out property <bool> powerPlus50;
    in-out property <bool> tripThousandsD;
    in-out property <bool> tripThousandsA;
    in-out property <bool> tripThousandsE;
    in-out property <bool> tripThousandsG;
    in-out property <bool> tripThousandsF;
    in-out property <bool> tripTenthousandsB;
    in-out property <bool> tripTenthousandsC;
    in-out property <bool> tripTenthousandsD;


    //Expander10
    in-out property <bool> tripHundredsB;
    in-out property <bool> tripHundredsG;
    in-out property <bool> tripHundredsC;
    in-out property <bool> tripHundredsD;
    in-out property <bool> tripHundredsE;
    in-out property <bool> tripHundredsF;
    in-out property <bool> tripThousandsB;
    in-out property <bool> tripThousandsC;
    in-out property <bool> tripHundredsA;
    in-out property <bool> tripTensG;
    in-out property <bool> tripTensB;
    in-out property <bool> tripTensC;
    in-out property <bool> tripTensD;
    in-out property <bool> tripTensE;
    in-out property <bool> tripTensF;
    in-out property <bool> tripTensA;





    //Outputs
    in-out property<bool> output_left_signal;
    in-out property<bool> output_right_signal;
    in-out property<bool> output_headlights;
    in-out property<bool> output_farlights;
    in-out property<bool> output_brakes;
    in-out property<bool> output_flasher;
    in-out property<bool> output_buzzer;
    in-out property<bool> output_platelights;
    in-out property<bool> output_taillights;
    in-out property<bool> output_horn;


   height: 1000px;
   width: 1500px;
   
   HorizontalBox {
    VerticalBox {
        VerticalBox {
        padding-left: 180px;
        IndicatorDisplay {
            left_signal: leftSignal;
            mil_lamp: motorAlarmMilLamp;
            battery_alarm: akuBattAlarm;
            AlarmRed: alarmRed;
            AlarmAmber: alarmAmber;
            flasher: flasher;
            ABS: abs;
            Derate: derate;
            right_signal: rightSignal;
            headlights: headlights;
            farlights: farlights;
            taillights: taillights;
            READY: readyIndicator;
            BLE: ble;
            GPS: gsmIndicator;
            service_alarm: serviceAlarm;
        }}
        
        HorizontalBox {
            padding-left: 100px;
            BatteryDisplay1 {
                battery1_indicator: battery1Indicator;
                battery10: battery1_10;
                battery20: battery1_20;
                battery30: battery1_30;
                battery40: battery1_40;
                battery50: battery1_50;
                battery60: battery1_60;
                battery70: battery1_70;
                battery80: battery1_80;
                battery90: battery1_90;
                battery100: battery1_100;
            }
            SpeedDisplay {
                ones: [ speedOnesG,speedOnesF,speedOnesE,speedOnesD, speedOnesC,speedOnesB,speedOnesA];
                tens: [ speedTensG,speedTensF,speedTensE,speedTensD, speedTensC,speedTensB,speedTensA];
                hundreds: [speedHundredsB, speedHundredsA];
            }
            BatteryDisplay2 {
                battery2_indicator: battery2Indicator;
                battery10: battery2_10;
                battery20: battery2_20;
                battery30: battery2_30;
                battery40: battery2_40;
                battery50: battery2_50;
                battery60: battery2_60;
                battery70: battery2_70;
                battery80: battery2_80;
                battery90: battery2_90;
                battery100: battery2_100;
            }
        }
        DriveMode {
            bits: [driveModeR,driveModeP,driveModeD3,driveModeD2,driveModeD1];
        }
        HorizontalBox {
            padding-left: 230px;
            PowerDisplay{
                powerbits: [powerMinus30,powerMinus20,powerMinus10,powerPlus10,powerPlus20,powerPlus30,powerPlus40,powerPlus50,powerPlus60];
            }
        }
        HorizontalBox {
            ClockDisplay {
                minute_ones: [clockMinuteOnesG,clockMinuteOnesF,clockMinuteOnesE,clockMinuteOnesD, clockMinuteOnesC,clockMinuteOnesB,clockMinuteOnesA];
                minute_tens: [clockMinuteTensG,clockMinuteTensF,clockMinuteTensE,clockMinuteTensD, clockMinuteTensC,clockMinuteTensB,clockMinuteTensA];
                hour_ones: [clockHourOnesG,clockHourOnesF,clockHourOnesE,clockHourOnesD, clockHourOnesC,clockHourOnesB,clockHourOnesA];
                hour_tens: [clockHourTensG,clockHourTensF,clockHourTensE,clockHourTensD, clockHourTensC,clockHourTensB,clockHourTensA];
                minus: clockMinusIndicator;
                clock: clockIndicator;
                date: dateIndicator;
                temperature: clockTemperatureIndicator;
                colonColor: clockColonIndicator;
            }
            TripDisplay {
                trip: trip;
                odo: odo;
                range: range;
                fraction: [tripFractionG,tripFractionF,tripFractionE,tripFractionD, tripFractionC,tripFractionB,tripFractionA];
                ones: [tripOnesDF,tripOnesG,tripOnesF,tripOnesE,tripOnesD, tripOnesC,tripOnesB,tripOnesA];
                tens: [tripTensG,tripTensF,tripTensE,tripTensD, tripTensC,tripTensB,tripTensA];
                hundreds: [tripHundredsG,tripHundredsF,tripHundredsE,tripHundredsD, tripHundredsC,tripHundredsB,tripHundredsA];
                thousands: [tripThousandsG,tripThousandsF,tripThousandsE,tripThousandsD, tripThousandsC,tripThousandsB,tripThousandsA];
                tenthousands: [tripTenthousandsG,tripTenthousandsF,tripTenthousandsE,tripTenthousandsD, tripTenthousandsC,tripTenthousandsB,tripTenthousandsA];
                hundredssmall: [tripHundredthousandsBAlt, tripHundredthousandsAUst];
            }
        }
    }
    Outputs {
        left_signal: output_left_signal;
        right_signal: output_right_signal;
        headlights: output_headlights;
        farlights: output_farlights;
        brakes: output_brakes;
        flasher: output_flasher;
        buzzer: output_buzzer;
        platelights: output_platelights;
        taillights: output_taillights;
        horn: output_horn;
    }
   }
   
   

    
}

